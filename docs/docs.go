// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://aban.io/support",
            "email": "info@aban.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthz/liveness": {
            "get": {
                "description": "Check the liveness of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthz"
                ],
                "summary": "Healthz Liveness",
                "operationId": "healthz-liveness",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/response.Response-bool"
                        }
                    }
                }
            }
        },
        "/healthz/panic": {
            "get": {
                "tags": [
                    "healthz"
                ],
                "summary": "Panic for test",
                "responses": {
                    "500": {
                        "description": "panic",
                        "schema": {
                            "$ref": "#/definitions/response.Response-string"
                        }
                    }
                }
            }
        },
        "/healthz/rediness": {
            "get": {
                "description": "Check the readiness of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthz"
                ],
                "summary": "Healthz Readiness",
                "operationId": "healthz-rediness",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/response.Response-string"
                        }
                    }
                }
            }
        },
        "/healthz/sleep/{time}": {
            "get": {
                "tags": [
                    "healthz"
                ],
                "summary": "Long Run for test",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time to sleep, e.g. 30s",
                        "name": "time",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/response.Response-string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Response-bool": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "response.Response-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger",
	Description:      "API documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() { //nolint:gochecknoinits
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
