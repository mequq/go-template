basePath: /api/v1
definitions:
  dto.Movie:
    properties:
      description:
        type: string
      id:
        type: integer
      release_year:
        type: string
      title:
        type: string
    type: object
  dto.MovieListResponse:
    properties:
      movies:
        items:
          $ref: '#/definitions/dto.Movie'
        type: array
    type: object
  response.Response-bool:
    properties:
      data:
        type: boolean
      message:
        type: string
      status:
        type: integer
    type: object
  response.Response-string:
    properties:
      data:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: info@aban.io
    name: API Support
    url: http://aban.io/support
  description: API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger
  version: "1.0"
paths:
  /api/v3/content/v2/movies:
    get:
      consumes:
      - application/json
      description: Fetch a list of movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MovieListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Get list of movies
      tags:
      - Movies
  /api/v3/content/v2/movies/{movie_id}:
    get:
      consumes:
      - application/json
      description: Fetch a movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Get a movie by ID
      tags:
      - Movies
  /api/v3/content/v2/movies/{movie_id}/similar:
    get:
      consumes:
      - application/json
      description: Fetch similar movies based on a given movie ID
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MovieListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Get similar movies
      tags:
      - Movies
  /healthz/liveness:
    get:
      consumes:
      - application/json
      description: Check the liveness of the service
      operationId: healthz-liveness
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.Response-bool'
      summary: Healthz Liveness
      tags:
      - healthz
  /healthz/panic:
    get:
      responses:
        "500":
          description: panic
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Panic for test
      tags:
      - healthz
  /healthz/rediness:
    get:
      consumes:
      - application/json
      description: Check the readiness of the service
      operationId: healthz-rediness
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Healthz Readiness
      tags:
      - healthz
  /healthz/sleep/{time}:
    get:
      parameters:
      - description: Time to sleep, e.g. 30s
        in: path
        name: time
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/response.Response-string'
      summary: Long Run for test
      tags:
      - healthz
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
