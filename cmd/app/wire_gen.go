// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"application/internal/biz"
	"application/internal/datasource"
	"application/internal/repo"
	"application/internal/service"
	"application/internal/service/handler"
	"application/pkg/initializer/config"
	"context"
	"log/slog"
	"net/http"

	"github.com/go-playground/validator/v10"
)

// Injectors from wire.go:

func wireApp(ctx context.Context, cfg config.Config, logger *slog.Logger, validate *validator.Validate) (http.Handler, error) {
	serveMux := http.NewServeMux()
	inmemoryDB := datasource.NewInmemoryDB(logger)
	healthz := repo.NewHealthzDS(logger, inmemoryDB)
	bizHealthz := biz.NewHealthz(healthz, logger)
	healthzHandler := handler.NewMuxHealthzHandler(bizHealthz, logger, serveMux)
	v := handler.NewServiceList(healthzHandler)
	httpHandler, err := service.NewHTTPHandler(ctx, logger, serveMux, v...)
	if err != nil {
		return nil, err
	}
	return httpHandler, nil
}
